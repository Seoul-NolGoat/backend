plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'wad'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // implementation dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.google.guava:guava:32.0.0-android' // RateLimiter 사용을 위한 Guava 라이브러리
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Point 자료형을 포함한 지리 공간 데이터 처리
    implementation 'org.locationtech.jts:jts-core:1.18.0'
    implementation 'org.hibernate:hibernate-spatial:6.5.2.Final'

    // JWT 지원
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // compile-only dependencies
    compileOnly 'org.projectlombok:lombok'

    // runtime-only dependencies
    runtimeOnly 'com.mysql:mysql-connector-j'

    // annotation processors
    annotationProcessor 'org.projectlombok:lombok'

    // querydsl 관련 annotation processors
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // test implementation dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // test runtime-only dependencies
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
